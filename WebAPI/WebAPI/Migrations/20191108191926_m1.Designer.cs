// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20191108191926_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WebAPI.Models.Apuesta", b =>
                {
                    b.Property<int>("ApuestaId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cuota");

                    b.Property<int>("DineroApostado");

                    b.Property<int>("MercadoId");

                    b.Property<int>("TipoApuesta");

                    b.Property<string>("UsuarioId");

                    b.HasKey("ApuestaId");

                    b.HasIndex("MercadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuestas");
                });

            modelBuilder.Entity("WebAPI.Models.Cuenta", b =>
                {
                    b.Property<string>("CuentaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("NombreBanco");

                    b.Property<int>("NumeroTarjeta");

                    b.Property<string>("SaldoActual");

                    b.Property<string>("UsuarioId");

                    b.HasKey("CuentaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("WebAPI.Models.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Goles");

                    b.Property<string>("Local");

                    b.Property<string>("Visitant");

                    b.HasKey("EventoId");

                    b.ToTable("Eventos");

                    b.HasData(
                        new
                        {
                            EventoId = 1,
                            Goles = 2,
                            Local = "Madrid",
                            Visitant = "Barcelona"
                        });
                });

            modelBuilder.Entity("WebAPI.Models.Mercado", b =>
                {
                    b.Property<int>("MercadoId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cuota_over");

                    b.Property<double>("Cuota_under");

                    b.Property<double>("Dinero_over");

                    b.Property<double>("Dinero_under");

                    b.Property<int>("EventoId");

                    b.Property<int>("Tipo_mercado");

                    b.HasKey("MercadoId");

                    b.HasIndex("EventoId");

                    b.ToTable("Mercados");
                });

            modelBuilder.Entity("WebAPI.Models.Usuario", b =>
                {
                    b.Property<string>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<int>("Edad");

                    b.Property<string>("Nombre");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("WebAPI.Models.Apuesta", b =>
                {
                    b.HasOne("WebAPI.Models.Mercado", "Mercado")
                        .WithMany("Apuestas")
                        .HasForeignKey("MercadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPI.Models.Usuario", "Usuario")
                        .WithMany("Apuesta")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("WebAPI.Models.Cuenta", b =>
                {
                    b.HasOne("WebAPI.Models.Usuario", "Usuario")
                        .WithOne("Cuenta")
                        .HasForeignKey("WebAPI.Models.Cuenta", "UsuarioId");
                });

            modelBuilder.Entity("WebAPI.Models.Mercado", b =>
                {
                    b.HasOne("WebAPI.Models.Evento", "Evento")
                        .WithMany("Mercados")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
